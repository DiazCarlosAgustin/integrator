version: "3"
services:
  db_mysql:
      container_name: "db_mysql"
      image: mysql
      restart: always
      command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
      environment:
        MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        MYSQL_DATABASE: 'integrador'
        MYSQL_USER: 'test'
        MYSQL_PASSWORD: 'password'
      ports:
        - '3306:3306'
      expose:
        - '3306'
      volumes:
        - mysqldata_master:/var/lib/mysql
      networks:
        - network_test
  api_gateway:
      container_name: api_gateway
      build:
        context: .
        dockerfile: ./apps/api-getaway/Dockerfile
        target: development
      command: npm run start:dev api-getaway
      env_file:
        - ./.env
      depends_on:
        - db_mysql
        - rabbitmq
        - api_parameters
        - api_services
        - api_sync
        - api_flexxus
        # - api_auth
        # - api_companies
        # - api_products
      volumes:
        - .:/usr/src/app
        - /usr/src/app/node_modules
      ports:
        - '3000:3000'
      networks:
        - network_test
  api_parameters:
      build:
        context: .
        dockerfile: ./apps/parameters/Dockerfile
        target: development
      command: npm run start:dev parameters
      env_file:
        - ./.env
      depends_on:
        - db_mysql
        - rabbitmq
      volumes:
        - .:/usr/src/app
        - /usr/src/app/node_modules
      ports:
        - '3001:3001'
      networks:
        - network_test
  # api_auth:
  #     build:
  #       context: .
  #       dockerfile: ./apps/auth/Dockerfile
  #       target: development
  #     command: npm run start:dev auth
  #     env_file:
  #       - ./.env
  #     depends_on:
  #       - db_mysql
  #       - rabbitmq
  #     volumes:
  #       - .:/usr/src/app
  #       - /usr/src/app/node_modules
  #     ports:
  #       - '3002:3002'
  #     networks:
  #       - network_test
  # api_companies:
  #     build:
  #       context: .
  #       dockerfile: ./apps/auth/Dockerfile
  #       target: development
  #     command: npm run start:dev companies
  #     env_file:
  #       - ./.env
  #     depends_on:
  #       - db_mysql
  #       - rabbitmq
  #     volumes:
  #       - .:/usr/src/app
  #       - /usr/src/app/node_modules
  #     ports:
  #       - '3003:3003'
  #     networks:
  #       - network_test
  api_flexxus:
      build:
        context: .
        dockerfile: ./apps/flexxus/Dockerfile
        target: development
      command: npm run start:dev companies
      env_file:
        - ./.env
      depends_on:
        - db_mysql
        - rabbitmq
      volumes:
        - .:/usr/src/app
        - /usr/src/app/node_modules
      ports:
        - '3004:3004'
      networks:
        - network_test
  # api_products:
  #     build:
  #       context: .
  #       dockerfile: ./apps/products/Dockerfile
  #       target: development
  #     command: npm run start:dev products
  #     env_file:
  #       - ./.env
  #     depends_on:
  #       - db_mysql
  #       - rabbitmq
  #     volumes:
  #       - .:/usr/src/app
  #       - /usr/src/app/node_modules
  #     ports:
  #       - '3005:3005'
  #     networks:
  #       - network_test
  api_services:
      build:
        context: .
        dockerfile: ./apps/services/Dockerfile
        target: development
      command: npm run start:dev services
      env_file:
        - ./.env
      depends_on:
        - db_mysql
        - rabbitmq
      volumes:
        - .:/usr/src/app
        - /usr/src/app/node_modules
      ports:
        - '3006:3006'
      networks:
        - network_test
  api_sync:
      build:
        context: .
        dockerfile: ./apps/sync/Dockerfile
        target: development
      command: npm run start:dev sync
      env_file:
        - ./.env
      depends_on:
        - db_mysql
        - rabbitmq
      volumes:
        - .:/usr/src/app
        - /usr/src/app/node_modules
      ports:
        - '3007:3007'
      networks:
        - network_test

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    expose:
      - '5672'
      - '15672'
    env_file:
      - .env
    networks:
      - network_test

volumes:
  my-db:
    driver: local
  mysqldata_master:
networks:
  network_test:
    driver: bridge